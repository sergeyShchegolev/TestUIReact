// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XmlParser;

#nullable disable

namespace XmlParser.Migrations
{
    [DbContext(typeof(SBMContext))]
    [Migration("20230228063314_AddDocument_LN_1C")]
    partial class AddDocument_LN_1C
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XmlParser.DTO.Document_1C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DB_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbReplicaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Document_LN_1CId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Form")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Schema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UNID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Document_LN_1CId");

                    b.ToTable("Documents_1C");
                });

            modelBuilder.Entity("XmlParser.DTO.Document_LN_1C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DB_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbReplicaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents_LN_1C");
                });

            modelBuilder.Entity("XmlParser.DTO.Field_1C", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Document_1CId")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Document_1CId");

                    b.ToTable("Fields_1C");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DB_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbReplicaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Document_LNId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Form")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Schema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UNID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Document_LNId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DB_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbReplicaID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents_LN");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("XmlParser.DTO.Document_1C", b =>
                {
                    b.HasOne("XmlParser.DTO.Document_LN_1C", null)
                        .WithMany("Documents_1C")
                        .HasForeignKey("Document_LN_1CId");
                });

            modelBuilder.Entity("XmlParser.DTO.Field_1C", b =>
                {
                    b.HasOne("XmlParser.DTO.Document_1C", null)
                        .WithMany("Fields_1C")
                        .HasForeignKey("Document_1CId");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document", b =>
                {
                    b.HasOne("XmlParser.DTO.Rootobject+Document_LN", null)
                        .WithMany("Documents")
                        .HasForeignKey("Document_LNId");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Field", b =>
                {
                    b.HasOne("XmlParser.DTO.Rootobject+Document", null)
                        .WithMany("Fields")
                        .HasForeignKey("DocumentId");
                });

            modelBuilder.Entity("XmlParser.DTO.Document_1C", b =>
                {
                    b.Navigation("Fields_1C");
                });

            modelBuilder.Entity("XmlParser.DTO.Document_LN_1C", b =>
                {
                    b.Navigation("Documents_1C");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
