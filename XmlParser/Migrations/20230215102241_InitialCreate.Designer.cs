// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XmlParser;

#nullable disable

namespace XmlParser.Migrations
{
    [DbContext(typeof(SBMContext))]
    [Migration("20230215102241_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DB_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbReplicaID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents_LN");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN+Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DB_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbReplicaID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Document_LNId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Schema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Server_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UNID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Document_LNId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN+Document+Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("Field");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN+Document", b =>
                {
                    b.HasOne("XmlParser.DTO.Rootobject+Document_LN", null)
                        .WithMany("document")
                        .HasForeignKey("Document_LNId");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN+Document+Field", b =>
                {
                    b.HasOne("XmlParser.DTO.Rootobject+Document_LN+Document", null)
                        .WithMany("field")
                        .HasForeignKey("DocumentId");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN", b =>
                {
                    b.Navigation("document");
                });

            modelBuilder.Entity("XmlParser.DTO.Rootobject+Document_LN+Document", b =>
                {
                    b.Navigation("field");
                });
#pragma warning restore 612, 618
        }
    }
}
